Zero = "0";
One = "1";
Bit = Zero | One;
export First = Optimize[Zero Zero* Bit* One One One One?];
export Second = Optimize[Zero Bit* One One One];
export Disagreements = Optimize[ (First - Second) | (Second - First) ];
export Triplets = (Zero* One One One One*)* Zero*; 
export NotPillars = Bit* - ((One One)*);
export Oddlets = Optimize[Zero* (One (One One)* (Zero+ One (One One)*)*)? Zero*]; 

# Below is for 9(b)
export WFlip = ((Zero:One <2>) | (Zero <1>)) ((Zero:(Zero One) <0.5>) | (One:Zero <0.4>))+ (One <0.5>); 

